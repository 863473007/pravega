/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'kandha' at '4/27/16 4:35 PM' with Gradle 2.11
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.11/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java

allprojects {
apply plugin: 'java'
//apply plugin: 'scala'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'checkstyle'

 // In this section you declare where to find the dependencies of your project
 repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
 }

 checkstyle {
   configFile = new File(rootDir, "checkstyle/checkstyle.xml")
   configProperties = [importControlFile: "$rootDir/checkstyle/import-control.xml"]
 }


// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.14'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}

}

def pkgs = ['clients:log', 'clients:streaming:consumer', 'clients:streming:producer', 'streaming', 'log']

tasks.create(name: "jarAll", dependsOn: [''] + pkgs.collect { it + ":jar" }) { }

tasks.create(name: "srcJarAll", dependsOn: [''] + pkgs.collect { it + ":srcJar" }) { }

tasks.create(name: "docsJarAll", dependsOn: [''] + pkgs.collect { it + ":docsJar" }) { }

tasks.create(name: "testAll", dependsOn: [''] + pkgs.collect { it + ":test" }) { }

tasks.create(name: "installAll", dependsOn: [''] + pkgs.collect { it + ":install" }) { }

tasks.create(name: "releaseTarGzAll", dependsOn: ['']) { }

tasks.create(name: "uploadArchivesAll", dependsOn: [''] + pkgs.collect { it + ":uploadArchives" }) { }


project (':clients:log') {

} 
project('clients:streaming:consumer') {} 
project('clients:streming:producer') {} 
project('streaming') {}
 project ('log') {}
